<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2018-06-21T12:35:13+09:00</updated><id>http://0.0.0.0:4000/</id><title type="html">Write code like poem</title><subtitle>SW개발에 대한 이야기</subtitle><author><name>mg.song</name></author><entry><title type="html">프라미스 then 함수가 프라미스를 리턴할 때</title><link href="http://0.0.0.0:4000/linux/2018/06/promise-then.html" rel="alternate" type="text/html" title="프라미스 then 함수가 프라미스를 리턴할 때" /><published>2018-06-20T09:00:00+09:00</published><updated>2018-06-20T09:00:00+09:00</updated><id>http://0.0.0.0:4000/linux/2018/06/promise-then</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2018/06/promise-then.html">&lt;p&gt;프라미스 체이닝에서 프라미스를 리턴하고 전달받을 경우에 대한 동작에 대해서 알아본다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;case1-then-함수에서-문자열을-리턴하는-경우&quot;&gt;CASE1) then 함수에서 문자열을 리턴하는 경우&lt;/h4&gt;
&lt;p&gt;앞서 리턴한 값을 다음 then 함수에서 인자로 받는다&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;리턴값1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;리턴값2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res2 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;실행결과)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  res1 = 리턴값1
  res2 = 리턴값2
&amp;lt; Promise {&amp;lt;resolved&amp;gt;: undefined}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;case2-then-에서-프라미스를-리턴하는-경우&quot;&gt;CASE2) then 에서 프라미스를 리턴하는 경우&lt;/h4&gt;
&lt;p&gt;then 에서 프라미스를 리턴하면 해당 프라미스가 resolved 될 때 다음 then 함수가 호출되며 resolve에 전달 된 값이 다음 then 함수에 전달된다&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;리턴값1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;리턴값2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res2 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;실행결과)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  res1 = 리턴값1
&amp;lt; Promise {&amp;lt;pending&amp;gt;}
  res2 = 리턴값2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;case3-첫번째-프라미스가-resolve-함수에-프라미스를-전달하는-경우&quot;&gt;CASE3) 첫번째 프라미스가 resolve 함수에 프라미스를 전달하는 경우&lt;/h4&gt;
&lt;p&gt;1번째 프라미스가 리턴한 프라미스가 resolved될 때(3초후) 다음 then 함수가 호출되며, 해당 프라미스가 resolved된 값을 인자로 전달받는다&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;리턴값1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res1 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;리턴값2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;res2 = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;실행결과)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt; Promise {&amp;lt;pending&amp;gt;}
  res1 = 리턴값1
  res2 = 리턴값2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;결론&quot;&gt;결론&lt;/h4&gt;
&lt;p&gt;then 함수 앞에서 프라미스를 리턴하는 경우에는 해당 프라미스가 resolved 된 값을 인자로 전달받는다&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">프라미스 체이닝에서 프라미스를 리턴하고 전달받을 경우에 대한 동작에 대해서 알아본다</summary></entry><entry><title type="html">리눅스 셀스크립트 작성 방법</title><link href="http://0.0.0.0:4000/linux/2018/06/linux-shell.html" rel="alternate" type="text/html" title="리눅스 셀스크립트 작성 방법" /><published>2018-06-20T09:00:00+09:00</published><updated>2018-06-20T09:00:00+09:00</updated><id>http://0.0.0.0:4000/linux/2018/06/linux-shell</id><content type="html" xml:base="http://0.0.0.0:4000/linux/2018/06/linux-shell.html">&lt;ol&gt;
  &lt;li&gt;아래와 같이 hello.sh 을 작성하고
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello Word!!&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;실행권한을 부여한 후
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod 700 hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;아래와 같이 실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ref.
&lt;a href=&quot;http://blog.naver.com/PostView.nhn?blogId=bestheroz&amp;amp;logNo=66975657&amp;amp;categoryNo=4&amp;amp;viewDate=&amp;amp;currentPage=1&amp;amp;listtype=0&quot;&gt;http://blog.naver.com/PostView.nhn?blogId=bestheroz&amp;amp;logNo=66975657&amp;amp;categoryNo=4&amp;amp;viewDate=&amp;amp;currentPage=1&amp;amp;listtype=0&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">아래와 같이 hello.sh 을 작성하고 #!/bin/sh echo &quot;Hello Word!!&quot; 실행권한을 부여한 후 chmod 700 hello.sh</summary></entry><entry><title type="html">remote 호스트의 mac address 얻어오는 방법</title><link href="http://0.0.0.0:4000/network/2018/06/mac-adress.html" rel="alternate" type="text/html" title="remote 호스트의 mac address 얻어오는 방법" /><published>2018-06-11T09:00:00+09:00</published><updated>2018-06-11T09:00:00+09:00</updated><id>http://0.0.0.0:4000/network/2018/06/mac-adress</id><content type="html" xml:base="http://0.0.0.0:4000/network/2018/06/mac-adress.html">&lt;h4 id=&quot;문제&quot;&gt;문제&lt;/h4&gt;
&lt;p&gt;서버에서 클라이언트의 mac address 를 알아낼 수 있을까&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;결론&quot;&gt;결론&lt;/h4&gt;
&lt;p&gt;같은 네트웍망에 물려있다면 가능하지만, 서로 다른 네트웍망에 속해 있다면 불가&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;배경지식&quot;&gt;배경지식&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ARP란? Address Resolution Protocol
    &lt;ul&gt;
      &lt;li&gt;IP 주소에 대응되는 이더넷카드의 하드웨어 주소(MAC주소)를 알아내는 프로토콜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MAC adress란? Media Access Control address
    &lt;ul&gt;
      &lt;li&gt;앞 3자리는 네트웍카드 제조회사 고유 코드, 뒤 3자리는 네트웍카드 고유 번호&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ARP 테이블 조회 명령
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; arp &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;? (169.254.143.159) at b8:44:d9:56:6f:92 on en0 [ethernet]
? (169.254.197.202) at ac:e0:10:60:71:d on en0 [ethernet]
? (169.254.214.31) at e4:70:b8:ee:4e:d1 on en0 [ethernet]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;노드에서-mac-address-조회-방법&quot;&gt;노드에서 mac-address 조회 방법&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/node-arp&quot;&gt;node-arp&lt;/a&gt; 를 설치하고 아래와 같이 처리&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'node-arp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;arp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getMAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'192.168.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(단, 로컬의 arp table 을 조회하기 때문에 동일한 네트웍이 아닐 경우에는 활용 불가)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/sbd38/50191972929&quot;&gt;https://m.blog.naver.com/sbd38/50191972929&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">문제 서버에서 클라이언트의 mac address 를 알아낼 수 있을까</summary></entry><entry><title type="html">iOS 에서 입력컨트롤 테두리 그림자 제거</title><link href="http://0.0.0.0:4000/front-end/2018/06/border-shadow.html" rel="alternate" type="text/html" title="iOS 에서 입력컨트롤 테두리 그림자 제거" /><published>2018-06-11T09:00:00+09:00</published><updated>2018-06-11T09:00:00+09:00</updated><id>http://0.0.0.0:4000/front-end/2018/06/border-shadow</id><content type="html" xml:base="http://0.0.0.0:4000/front-end/2018/06/border-shadow.html">&lt;h4 id=&quot;문제&quot;&gt;문제&lt;/h4&gt;
&lt;p&gt;입력 컨트롤의 테두리를 보시면(border-top) 어두운 그림자가 드리어져 있다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ios-asis.jpg&quot; alt=&quot;이후&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;해결책&quot;&gt;해결책&lt;/h4&gt;
&lt;p&gt;아래 스타일을 사용&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input, textarea {
    -webkit-appearance: none;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;결과&quot;&gt;결과&lt;/h4&gt;
&lt;p&gt;그림자가 사라지고 훨씬 깔끔해 졌다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ios-tobe.jpg&quot; alt=&quot;이후&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://webisfree.com/2016-03-22/ios-아이폰-input-태그에-기본-둥근-테두리-및-그림자-제거-방법&quot;&gt;https://webisfree.com/2016-03-22/ios-아이폰-input-태그에-기본-둥근-테두리-및-그림자-제거-방법&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">문제 입력 컨트롤의 테두리를 보시면(border-top) 어두운 그림자가 드리어져 있다</summary></entry><entry><title type="html">[js] 불변성을 유지하며 array 순서 뒤집기</title><link href="http://0.0.0.0:4000/front-end/2018/06/array-reverse.html" rel="alternate" type="text/html" title="[js] 불변성을 유지하며 array 순서 뒤집기" /><published>2018-06-07T09:00:00+09:00</published><updated>2018-06-07T09:00:00+09:00</updated><id>http://0.0.0.0:4000/front-end/2018/06/array-reverse</id><content type="html" xml:base="http://0.0.0.0:4000/front-end/2018/06/array-reverse.html">&lt;h4 id=&quot;문제&quot;&gt;문제&lt;/h4&gt;
&lt;p&gt;배열의 순서를 뒤집기 위해 간단히 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr.reverse()&lt;/code&gt; 를 이용할 수 있지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.prototype.reverse&lt;/code&gt; 는 불변성을 유지하지 못한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;해결책&quot;&gt;해결책&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;불변성을 유지하는 slice() 를 이용한 방법
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; const arr = [1,2,3];
  const newArr = arr.slice().reverse();
&amp;gt; newArr
&amp;lt; (3) [3, 2, 1]
&amp;gt; arr
&amp;lt; (3) [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;… (&lt;em&gt;spread operator&lt;/em&gt;) 를 이용한 방법
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; const arr = [1,2,3];
  const newArr = [...arr].reverse();
&amp;gt; newArr
&amp;lt; (3) [3, 2, 1]
&amp;gt; arr
&amp;lt; (3) [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>mg.song</name></author><summary type="html">문제 배열의 순서를 뒤집기 위해 간단히 arr.reverse() 를 이용할 수 있지만 Array.prototype.reverse 는 불변성을 유지하지 못한다.</summary></entry><entry><title type="html">[mongodb] aws ec2 에서 mongodb 세팅하기</title><link href="http://0.0.0.0:4000/back-end/2018/06/mongodb-setting.html" rel="alternate" type="text/html" title="[mongodb] aws ec2 에서 mongodb 세팅하기" /><published>2018-06-06T10:00:00+09:00</published><updated>2018-06-06T10:00:00+09:00</updated><id>http://0.0.0.0:4000/back-end/2018/06/mongodb-setting</id><content type="html" xml:base="http://0.0.0.0:4000/back-end/2018/06/mongodb-setting.html">&lt;h4 id=&quot;mongodb-설치&quot;&gt;mongodb 설치&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;root 권한으로 전환
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo su
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/yum.repos.d/mongodb-org-3.4.repo&lt;/code&gt; 입력 후 아래 내용 저장
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mongodb-org-3.4]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.4/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;yum 으로 설치
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install -y mongodb-org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;mongodb-서버시작-및-접속&quot;&gt;mongodb 서버시작 및 접속&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;서비스 시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service mongod start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;서비스 재시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service mongod restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;서버접속
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;mongodb-보안-설정&quot;&gt;mongodb 보안 설정&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;설정을 수정하려면 root 권한이 필요하다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/mongod.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;외부에서 접근을 허용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;net&lt;/code&gt; 항목의 &lt;code class=&quot;highlighter-rouge&quot;&gt;bindIp&lt;/code&gt; 항목을 아래와 같이 주석처리한다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# network interfaces
net:
  port: 27017
#  bindIp: 127.0.0.1  # Listen to local interface only, comment to listen on all interfaces.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;익명 로그인을 제한하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;security&lt;/code&gt; 항목에 &lt;code class=&quot;highlighter-rouge&quot;&gt;authorization: enabled&lt;/code&gt; 를 추가한다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;security:
 authorization: enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://chichi.space/2017/05/12/한번에-끝내는-AWS-EC2에-MongoDB-설치하고-보안설정하기/&quot;&gt;https://chichi.space/2017/05/12/한번에-끝내는-AWS-EC2에-MongoDB-설치하고-보안설정하기/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">mongodb 설치 root 권한으로 전환 $ sudo su vi /etc/yum.repos.d/mongodb-org-3.4.repo 입력 후 아래 내용 저장 [mongodb-org-3.4] name=MongoDB Repository baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.4/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc yum 으로 설치 $ yum install -y mongodb-org</summary></entry><entry><title type="html">[mongodb] 명령어</title><link href="http://0.0.0.0:4000/back-end/2018/06/mongodb-command.html" rel="alternate" type="text/html" title="[mongodb] 명령어" /><published>2018-06-05T10:00:00+09:00</published><updated>2018-06-05T10:00:00+09:00</updated><id>http://0.0.0.0:4000/back-end/2018/06/mongodb-command</id><content type="html" xml:base="http://0.0.0.0:4000/back-end/2018/06/mongodb-command.html">&lt;h4 id=&quot;몽고디비-시작-및-접속windows&quot;&gt;몽고디비 시작 및 접속(Windows)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;서비스 시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;몽고디비는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\data\db&lt;/code&gt; 경로를 바라보며 시작한다. 해당 경로가 없을 경우 정상적으로 서비스가 시작되지 않고 오류가 발생하므로 미리 해당 폴더를 만들어 두도록 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;디비서버 접속
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;데이터베이스-관리&quot;&gt;데이터베이스 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;데이터베이스 생성
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; use talkplace
switched to db talkplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 데이터베이스 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db
talkplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show dbs
admin      0.000GB
config     0.000GB
local      0.000GB
talkplace  0.000GB
test       0.000GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; use talkplace
switched to db talkplace
&amp;gt; db.dropDatabase()
{ &quot;dropped&quot; : &quot;talkplace&quot;, &quot;ok&quot; : 1 }
&amp;gt; show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
test    0.000GB
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;콜렉션-관리&quot;&gt;콜렉션 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;콜렉션 생성&lt;br /&gt;
기본 옵션으로 생성
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.createCollection(&quot;posts&quot;)
{ &quot;ok&quot; : 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show collections
book
posts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션에 다큐먼트 추가
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.insert({&quot;key&quot; : &quot;BJwttIGe7&quot;, &quot;title&quot; : &quot;오늘은 왜케 잠잠하지.. 허허&quot;, &quot;writer&quot; : &quot;송혜교&quot;, &quot;conten
t&quot; : &quot;그러니 왠지 더욱 불안..\n&quot;, &quot;date&quot; : 1528093055313 })
WriteResult({ &quot;nInserted&quot; : 1 })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;posts 콜렉션이 이미 생성되지 않은 경우에는 자동으로 생성된 후 다큐먼트가 추가된다. 아래와 같이 배열로 여러 건을 한꺼번에 추가할 수도 있다&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.insert([
... {&quot;key&quot; : &quot;rJf4T8zlm&quot;, &quot;title&quot; : &quot;이제 대략 정리가 된거 같다아&quot;, &quot;writer&quot; : &quot;휴우&quot;, &quot;content&quot; : &quot;정신 하나
도 없었엉~~&quot;, &quot;date&quot; : 1528093993879 },
... {&quot;key&quot; : &quot;SyTvQvflX&quot;, &quot;title&quot; : &quot;이제 나왔다&quot;, &quot;writer&quot; : &quot;카카&quot;, &quot;content&quot; : &quot;서버에서 돈다 이젠&quot;, &quot;date
&quot; : 1528095589017 }
... ])
BulkWriteResult({
      &quot;writeErrors&quot; : [ ],
      &quot;writeConcernErrors&quot; : [ ],
      &quot;nInserted&quot; : 2,
      &quot;nUpserted&quot; : 0,
      &quot;nMatched&quot; : 0,
      &quot;nModified&quot; : 0,
      &quot;nRemoved&quot; : 0,
      &quot;upserted&quot; : [ ]
})
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show collections
book
posts
&amp;gt; db.book.drop()
true
&amp;gt; show collections
posts
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;다큐먼트-관리&quot;&gt;다큐먼트 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;다큐먼트 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.find()
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7366&quot;), &quot;key&quot; : &quot;BJwttIGe7&quot;, &quot;title&quot; : &quot;오늘은 왜케 잠잠하지.. 허허&quot;,
 &quot;writer&quot; : &quot;송혜교&quot;, &quot;content&quot; : &quot;그러니 왠지 더욱 불안..\n&quot;, &quot;date&quot; : 1528093055313 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7367&quot;), &quot;key&quot; : &quot;rJf4T8zlm&quot;, &quot;title&quot; : &quot;이제 대략 정리가 된거 같다아&quot;
, &quot;writer&quot; : &quot;휴우&quot;, &quot;content&quot; : &quot;정신 하나도 없었엉~~&quot;, &quot;date&quot; : 1528093993879 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7368&quot;), &quot;key&quot; : &quot;SyTvQvflX&quot;, &quot;title&quot; : &quot;이제 나왔다&quot;, &quot;writer&quot; : &quot;카
카&quot;, &quot;content&quot; : &quot;서버에서 돈다 이젠&quot;, &quot;date&quot; : 1528095589017 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7369&quot;), &quot;key&quot; : &quot;SJblZ_Me7&quot;, &quot;title&quot; : &quot;안녕&quot;, &quot;writer&quot; : &quot;이것도&quot;, &quot;
content&quot; : &quot;입력할때 좀 버벅 거리는 현상이 조금 있는거 같은디&quot;, &quot;date&quot; : 1528099049206 }
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;다큐먼트 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db.posts.remove({key : &quot;BJwttIGe7&quot;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://velopert.com/594&quot;&gt;https://velopert.com/594&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velopert.com/436&quot;&gt;https://velopert.com/436&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">몽고디비 시작 및 접속(Windows) 서비스 시작 C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongod 몽고디비는 기본적으로 C:\data\db 경로를 바라보며 시작한다. 해당 경로가 없을 경우 정상적으로 서비스가 시작되지 않고 오류가 발생하므로 미리 해당 폴더를 만들어 두도록 한다.</summary></entry><entry><title type="html">[AWS-EC2] 리눅스에 nodejs 설치</title><link href="http://0.0.0.0:4000/aws/2018/05/ec2-node.html" rel="alternate" type="text/html" title="[AWS-EC2] 리눅스에 nodejs 설치" /><published>2018-05-31T10:00:00+09:00</published><updated>2018-05-31T10:00:00+09:00</updated><id>http://0.0.0.0:4000/aws/2018/05/ec2-node</id><content type="html" xml:base="http://0.0.0.0:4000/aws/2018/05/ec2-node.html">&lt;ol&gt;
  &lt;li&gt;EC2 업데이트&lt;br /&gt;
프롬프트가 뜨면 ‘y’를 입력
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;설치에 필요한 패키지들 먼저 설치
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install gcc-c++ make
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install openssl-devel
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Github 저장소에서 Node를 내려받고 어떤 버전의 노드를 설치할 것인지 선택한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -l&lt;/code&gt; 명령을 사용하면 전체 노드 버전을 확인할 수 있다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/joyent/node.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout v0.12.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;근데 위 git저장소에는 너무 오래된 버젼만 들어있음. 위 제시된 0.12.7 버젼에서는 es6 사용불가.
&lt;em&gt;&lt;a href=&quot;https://nodejs.org/dist/&quot;&gt;https://nodejs.org/dist/&lt;/a&gt;&lt;/em&gt; 에서 시스템환경에 맞는 최신 nodejs 버젼을 가져올 수도 있음&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://nodejs.org/download/release/v9.2.1/node-v9.2.1.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; node-v9.2.1.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node-v9.2.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;make 명령으로 컴파일하고 설치한다(make 명령은 30분정도 시간이 소요될 수 있다)
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Ref) &lt;a href=&quot;http://behonestar.tistory.com/39&quot;&gt;http://behonestar.tistory.com/39&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">EC2 업데이트 프롬프트가 뜨면 ‘y’를 입력 $ sudo yum update</summary></entry><entry><title type="html">[vscode] java 사용시 세팅 관련</title><link href="http://0.0.0.0:4000/tool/2018/05/vscode-setting.html" rel="alternate" type="text/html" title="[vscode] java 사용시 세팅 관련" /><published>2018-05-30T10:00:00+09:00</published><updated>2018-05-30T10:00:00+09:00</updated><id>http://0.0.0.0:4000/tool/2018/05/vscode-setting</id><content type="html" xml:base="http://0.0.0.0:4000/tool/2018/05/vscode-setting.html">&lt;ol&gt;
  &lt;li&gt;특정 jar를 인식하지 못할 때,&lt;br /&gt;
작업폴더의 루트 경로의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.classpath&lt;/code&gt; 파일에서 아래처럼 필요한 jar 파일들을 명시해 준다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/*.jar&lt;/code&gt; 나 &lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/*&lt;/code&gt; 과 같이 설정은 안되더라&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpath&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;attributes&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;nt&quot;&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;owner.project.facets&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;/attributes&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpathentry&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jst.j2ee.internal.web.container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jst.j2ee.internal.module.container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Applications/apache-tomcat-7.0.29/lib/servlet-api.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/lib/InswaveFramework.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/lib/json_simple-1.1.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/classes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;output&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;build/classes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpath&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;확장자별 인코딩을 변경하려면,&lt;br /&gt;
_작영 영역 설정_에서 아래와 같이 세팅한다. _gw 폴더 설정_에서 하면 안 먹힘
&lt;img src=&quot;/images/vscode-encoding.png&quot; alt=&quot;img2&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>mg.song</name></author><summary type="html">특정 jar를 인식하지 못할 때, 작업폴더의 루트 경로의 .classpath 파일에서 아래처럼 필요한 jar 파일들을 명시해 준다. /lib/*.jar 나 /lib/* 과 같이 설정은 안되더라</summary></entry><entry><title type="html">[mac] 열린 포트 확인</title><link href="http://0.0.0.0:4000/network/2018/05/mac-lsof.html" rel="alternate" type="text/html" title="[mac] 열린 포트 확인" /><published>2018-05-17T10:00:00+09:00</published><updated>2018-05-17T10:00:00+09:00</updated><id>http://0.0.0.0:4000/network/2018/05/mac-lsof</id><content type="html" xml:base="http://0.0.0.0:4000/network/2018/05/mac-lsof.html">&lt;p&gt;아래와 같이 lsof 명령으로 확인&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lsof &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; :7005
&lt;span class=&quot;go&quot;&gt;COMMAND   PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
java    72631 songmingu   57u  IPv6 0x5973dd9e9c2d668d      0t0  TCP localhost:afs3-volser (LISTEN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt; 72631
&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lsof &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; :7005
&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://new93helloworld.tistory.com/138&quot;&gt;http://new93helloworld.tistory.com/138&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">아래와 같이 lsof 명령으로 확인</summary></entry></feed>