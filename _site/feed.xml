<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-04T09:34:20+09:00</updated><id>http://localhost:4000/</id><title type="html">Write code like poem</title><subtitle>SW개발에 대한 이야기</subtitle><author><name>mg.song</name></author><entry><title type="html">[js] Srting.prototype.replace 에서 function 활용</title><link href="http://localhost:4000/algorithm/2018/05/caesar-enc.html" rel="alternate" type="text/html" title="[js] Srting.prototype.replace 에서 function 활용" /><published>2018-05-04T00:00:00+09:00</published><updated>2018-05-04T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2018/05/caesar-enc</id><content type="html" xml:base="http://localhost:4000/algorithm/2018/05/caesar-enc.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다.
A를 3만큼 밀면 D가 되고 z를 1만큼 밀면 a가 됩니다. 공백은 수정하지 않습니다.
보낼 문자열 s와 얼마나 밀지 알려주는 n을 입력받아 암호문을 만드는 caesar 함수를 완성해 보세요.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ex) “a B z”,4를 입력받았다면 “e F d”를 리턴합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;h4 id=&quot;풀이1&quot;&gt;풀이1&lt;/h4&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caesar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;A-Z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 실행을 위한 테스트코드입니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s는 &quot;a B z&quot;, n은 4인 경우: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caesar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a B z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;풀이2&quot;&gt;풀이2&lt;/h4&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caesar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;A-Za-z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;replacer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 실행을 위한 테스트코드입니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s는 &quot;a B z&quot;, n은 4인 경우: '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caesar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a B z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/replace&quot;&gt;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/replace&lt;/a&gt;
&lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/24&quot;&gt;https://programmers.co.kr/learn/challenge_codes/24&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다. A를 3만큼 밀면 D가 되고 z를 1만큼 밀면 a가 됩니다. 공백은 수정하지 않습니다. 보낼 문자열 s와 얼마나 밀지 알려주는 n을 입력받아 암호문을 만드는 caesar 함수를 완성해 보세요. ex) “a B z”,4를 입력받았다면 “e F d”를 리턴합니다.</summary></entry><entry><title type="html">What is Elm?</title><link href="http://localhost:4000/frontend/2018/05/whatis-elm.html" rel="alternate" type="text/html" title="What is Elm?" /><published>2018-05-03T09:00:00+09:00</published><updated>2018-05-03T09:00:00+09:00</updated><id>http://localhost:4000/frontend/2018/05/whatis-elm</id><content type="html" xml:base="http://localhost:4000/frontend/2018/05/whatis-elm.html">&lt;p&gt;&lt;a href=&quot;https://medium.com/@cscalfani&quot;&gt;Charles Scalfani&lt;/a&gt;의 &lt;a href=&quot;https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-6-db502830403&quot;&gt;글&lt;/a&gt;을 통해 Elm을 알게 되었다. 이 글을 꼼꼼히 번역해보고 싶지만, 바쁜 일정을 핑계로 번역은 다음으로 미루고 일단 몇가지 인상깊은 문장들을 중심으로 summary 만 남긴다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;자바스크립트는 함수형프로그래밍을 비슷하게나마 흉내낼 수 는 있지만 순수함수형프로그래밍 언어가 아니기 때문에 여러가지 제약이 있을 수 있다&lt;/li&gt;
  &lt;li&gt;js함수형 프로그래밍을 위해 &lt;a href=&quot;http://ramdajs.com/&quot;&gt;Ramds.js&lt;/a&gt;, &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot;&gt;immutable.js&lt;/a&gt; 등을 이용할 수 있지만 충분하지는 않다.&lt;/li&gt;
  &lt;li&gt;Haskell, Lisp, &lt;a href=&quot;https://clojure.org/&quot;&gt;Clojure&lt;/a&gt; 등의 함수형 언어들이 있지만 Frontend 개발에 적합하지는 않다.(웹브라우져에서 사용 가능한 언어는 js뿐이라)&lt;/li&gt;
  &lt;li&gt;front-end 함수형 프로그래밍을 위해 만들어진 &lt;a href=&quot;http://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; 을 사용해 보기를 권장
    &lt;ul&gt;
      &lt;li&gt;Elm은 js로 컴파일되기 때문에 webapp을 만들기 적합&lt;/li&gt;
      &lt;li&gt;js의 초안은 10일만에 작성되었고, 이후 20년 동안 패치가 거듭되면서 함수형, 객체지향형, 절차형 프로그래밍을 모두 흉내낼 수 있게 되었지만 충분하지 않다.&lt;/li&gt;
      &lt;li&gt;Elm 은 Haskell 커뮤니티에 의해 지난 30년간 배운 기술과 지식들이 총망라되어 설계되었다&lt;/li&gt;
      &lt;li&gt;Elm 은 fron-end 웹개발자들을 위해 탄생하였다. 그것은 그들의 삶의 질을 향상시켜 줄 것이다&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://kyunooh.gitbooks.io/elm/content/&quot;&gt;Elm 한글가이드&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;미래예측
    &lt;ul&gt;
      &lt;li&gt;coffeescript, typescript, elm 과 같이 자바스크립트로 컴파일되는 언어들이 대중적이 될 것이다&lt;/li&gt;
      &lt;li&gt;sw의 복잡성을 해결하는 방법으로서 함수형 프로그래밍은 재조명을 받을 것이다.&lt;/li&gt;
      &lt;li&gt;GB단위의 메모리와 빠른 프로세서는 함수형프로그래밍을 더욱 쓸모있게 만들어 줄 것이다&lt;/li&gt;
      &lt;li&gt;CPU는 더이상 빨라질 수 없지만, 코어수는 계속 늘어날 것이다&lt;/li&gt;
      &lt;li&gt;변경가능한 상태(변수사용)가 sw의 복잡성을 발생시키는 주요 문제로 인식이 되어질 것이다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">Charles Scalfani의 글을 통해 Elm을 알게 되었다. 이 글을 꼼꼼히 번역해보고 싶지만, 바쁜 일정을 핑계로 번역은 다음으로 미루고 일단 몇가지 인상깊은 문장들을 중심으로 summary 만 남긴다.</summary></entry><entry><title type="html">소수 찾기 알고리즘</title><link href="http://localhost:4000/algorithm/2018/05/find-primes.html" rel="alternate" type="text/html" title="소수 찾기 알고리즘" /><published>2018-05-02T14:00:00+09:00</published><updated>2018-05-02T14:00:00+09:00</updated><id>http://localhost:4000/algorithm/2018/05/find-primes</id><content type="html" xml:base="http://localhost:4000/algorithm/2018/05/find-primes.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1부터 n까지 모든 소수를 찾는 알고리즘&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;concept&quot;&gt;Concept&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;2부터 n까지 자연수를 요소로 갖는 배열 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; 생성 &lt;code class=&quot;highlighter-rouge&quot;&gt;[2, 3, 4, ..., n]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;빈 배열 &lt;code class=&quot;highlighter-rouge&quot;&gt;primes&lt;/code&gt; 를 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; 배열의 첫번째 요소(&lt;code class=&quot;highlighter-rouge&quot;&gt;arr[0]&lt;/code&gt;)를 &lt;code class=&quot;highlighter-rouge&quot;&gt;primes&lt;/code&gt; 배열에 추가&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; 배열에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr[0]&lt;/code&gt; 의 배수를 모두 제거&lt;/li&gt;
  &lt;li&gt;위 3~4과정을 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr[0]&lt;/code&gt; 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;n/2&lt;/code&gt; 보다 커지기 전까지 반복&lt;/li&gt;
  &lt;li&gt;위 과정이 끝나고 &lt;code class=&quot;highlighter-rouge&quot;&gt;primes&lt;/code&gt; 배열과 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; 배열을 합치면, 1부터 n까지의 모든 소수를 얻게됨&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;js-code&quot;&gt;JS Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/1818bf6fe935e99cb9677227a1e8919f.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/21&quot;&gt;https://programmers.co.kr/learn/challenge_codes/21&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 1부터 n까지 모든 소수를 찾는 알고리즘</summary></entry><entry><title type="html">Blockchain 학습 로드맵</title><link href="http://localhost:4000/blockchain/2018/04/learn-blockchain.html" rel="alternate" type="text/html" title="Blockchain 학습 로드맵" /><published>2018-04-27T17:00:00+09:00</published><updated>2018-04-27T17:00:00+09:00</updated><id>http://localhost:4000/blockchain/2018/04/learn-blockchain</id><content type="html" xml:base="http://localhost:4000/blockchain/2018/04/learn-blockchain.html">&lt;h2 id=&quot;into&quot;&gt;Into&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;요즘 뜨거운 관심을 받고 있는 블록체인&lt;/li&gt;
  &lt;li&gt;발을 담가볼 준비가 되었다면 &lt;a href=&quot;https://hackernoon.com/5-technology-trends-to-learn-in-2018-if-you-want-a-great-career-caf2e2318abb&quot;&gt;5 Technology Trends to Learn in 2018 If You Want a Great Career&lt;/a&gt; 에서 소개하는 학습로드맵을 참고해 보자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;loadmap&quot;&gt;LoadMap&lt;/h2&gt;
&lt;div&gt;
&lt;blockquote name=&quot;6c97&quot; id=&quot;6c97&quot;&gt;
1. &lt;a href=&quot;https://www.youtube.com/watch?v=utmnexPw1bY&amp;amp;list=PL2-dafEMk2A5VKD1CvdJMNIYerxoyPOcU&quot; data-href=&quot;https://www.youtube.com/watch?v=utmnexPw1bY&amp;amp;list=PL2-dafEMk2A5VKD1CvdJMNIYerxoyPOcU&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;What is a DAPP?&lt;/a&gt;
&lt;br /&gt;2. Learn about &lt;a href=&quot;http://sourcedaddy.com/networking/peer-to-peer-networking.html&quot; data-href=&quot;http://sourcedaddy.com/networking/peer-to-peer-networking.html&quot; class=&quot;markup--anchor markup--blockquote-anchor&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Peer to Peer Networking&lt;/a&gt;
&lt;br /&gt;3. Learn some &lt;a href=&quot;https://www.w3schools.com/nodejs/nodejs_intro.asp&quot; target=&quot;_blank&quot;&gt;Node.js basics&lt;/a&gt;
&lt;br /&gt;4. &lt;a href=&quot;https://hackernoon.com/learn-blockchains-by-building-one-117428612f46&quot; target=&quot;_blank&quot;&gt;What is a Blockchain?&lt;/a&gt; also check out this nice &lt;a href=&quot;https://blockchaindemo.io/?ref=producthunt&quot; target=&quot;_blank&quot;&gt;sample blockchain demo&lt;/a&gt;
&lt;br /&gt;5. Learn about &lt;a href=&quot;https://medium.com/@vrypan/explaining-public-key-cryptography-to-non-geeks-f0994b3c2d5&quot; target=&quot;_blank&quot;&gt;Public Key Cryptography&lt;/a&gt;
&lt;br /&gt;6. Build your own &lt;a href=&quot;http://www.darrenbeck.co.uk/blockchain/nodejs/nodejscrypto/&quot; target=&quot;_blank&quot;&gt;Blockchain using Javascript&lt;/a&gt;
&lt;br /&gt;7. &lt;a href=&quot;https://www.amazon.com/Cryptoassets-Innovative-Investors-Bitcoin-Beyond/dp/1260026671&quot; target=&quot;_blank&quot;&gt;What is Cryptocurrency?&lt;/a&gt; Learn the &lt;a href=&quot;https://www.amazon.com/Internet-Money-Andreas-M-Antonopoulos/dp/1537000454&quot; target=&quot;_blank&quot;&gt;history of Cryptocurrency&lt;/a&gt;
&lt;br /&gt;8. Learn about Ethereum: &lt;a href=&quot;https://github.com/ethereum/wiki/wiki/White-Paper&quot; target=&quot;_blank&quot;&gt;Ethereum white paper&lt;/a&gt;&amp;nbsp;, &lt;a href=&quot;http://gavwood.com/paper.pdf&quot; target=&quot;_blank&quot;&gt;Ethereum yellow paper&lt;/a&gt;, &lt;a href=&quot;https://themerkle.com/what-is-the-ethereum-virtual-machine/&quot; target=&quot;_blank&quot;&gt;Ethereum Virtual Machine&lt;/a&gt;, &lt;a href=&quot;https://steemit.com/cryptocurrency/@ctyptouniverse/ethereum-roadmap&quot; target=&quot;_blank&quot;&gt;Ethereum Development Roadmap&lt;/a&gt;, &lt;a href=&quot;https://blockgeeks.com/guides/proof-of-work-vs-proof-of-stake/&quot; target=&quot;_blank&quot;&gt;Proof of Work vs Proof of Stake&lt;/a&gt;, and Reading State vs Changing State on the Ethereum blockchain.
&lt;br /&gt;9. Learn &lt;a href=&quot;https://solidity.readthedocs.io/en/develop/&quot; target=&quot;_blank&quot;&gt;Solidity&lt;/a&gt; and how to write smart contracts. Learn about &lt;a href=&quot;https://www.quora.com/What-are-the-key-differences-between-Ethereum-Solidity-and-Javascript&quot; target=&quot;_blank&quot;&gt;Solidity vs Javascript&lt;/a&gt;. Keep an eye out for &lt;a href=&quot;https://github.com/ethereum/vyper&quot; target=&quot;_blank&quot;&gt;Vyper&lt;/a&gt;
&lt;br /&gt;10. Learn about the 3 main environments to run your DAPP: Javascript VM, Ethereum Ropsten Test Network, and Ethereum Main Network
&lt;br /&gt;11. Learn about &lt;a href=&quot;https://stackoverflow.com/questions/2171177/what-is-an-application-binary-interface-abi&quot; target=&quot;_blank&quot;&gt;ABI (Application Binary Interface)&lt;/a&gt;
&lt;br /&gt;12. Build your own DAPP using: &lt;a href=&quot;https://remix.ethereum.org/&quot; target=&quot;_blank&quot;&gt;RemixIDE&lt;/a&gt;, &lt;a href=&quot;https://metamask.io/&quot; target=&quot;_blank&quot;&gt;Metamask&lt;/a&gt;, &lt;a href=&quot;https://github.com/ethereum/web3.js/&quot; target=&quot;_blank&quot;&gt;Web3.js&amp;#8202;—&amp;#8202;Ethereum’s API&lt;/a&gt;, and the &lt;a href=&quot;http://truffleframework.com/&quot; target=&quot;_blank&quot;&gt;Truffle Framework&lt;/a&gt;
&lt;br /&gt;Deploy your DAPP and smart contract on the Ethereum Main Network
&lt;/blockquote&gt;
&lt;/div&gt;</content><author><name>mg.song</name></author><summary type="html">Into 요즘 뜨거운 관심을 받고 있는 블록체인 발을 담가볼 준비가 되었다면 5 Technology Trends to Learn in 2018 If You Want a Great Career 에서 소개하는 학습로드맵을 참고해 보자</summary></entry><entry><title type="html">최대공약수 최소공배수 알고리즘</title><link href="http://localhost:4000/algorithm/2018/04/gcd-lcm.html" rel="alternate" type="text/html" title="최대공약수 최소공배수 알고리즘" /><published>2018-04-24T13:00:00+09:00</published><updated>2018-04-24T13:00:00+09:00</updated><id>http://localhost:4000/algorithm/2018/04/gcd-lcm</id><content type="html" xml:base="http://localhost:4000/algorithm/2018/04/gcd-lcm.html">&lt;h4 id=&quot;유클리드-호제법&quot;&gt;유클리드 호제법&lt;/h4&gt;
&lt;p&gt;두 자연수 a, b에 대하여&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;a가 b로 나누어 떨어진다면 두 수의 최대공약수는 b 이다&lt;/li&gt;
  &lt;li&gt;a가 b로 나누어 떨어지지 않았다면 두수의 최대공약수는 b 와 a%b 의 최대공약수와 같다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이를 js코드로 작성하면 아래와 같다&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;그럼-최소공배수는&quot;&gt;그럼 최소공배수는?&lt;/h4&gt;
&lt;p&gt;두수 a, b에 대하여 최대공약수를 G 최소공배수를 L이라 할 때 다음 등식이 성립된다&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;a * b = L * G&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;그러므로, &lt;code class=&quot;highlighter-rouge&quot;&gt;L = ( a * b ) / G&lt;/code&gt; 가 된다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;n개-수의-최소공배수는&quot;&gt;n개 수의 최소공배수는?&lt;/h4&gt;
&lt;p&gt;n개의 자연수 배열을 입력으로 받아서 n개 수의 최소공배수를 리턴하는 함수&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nlcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://opentutorials.org/course/1685/9533&quot; target=&quot;_blank&quot;&gt;https://opentutorials.org/course/1685/9533&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/유클리드_호제법&quot; target=&quot;_blank&quot;&gt;https://ko.wikipedia.org/wiki/유클리드_호제법&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/30&quot; target=&quot;_blank&quot;&gt;https://programmers.co.kr/learn/challenge_codes/30&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">유클리드 호제법 두 자연수 a, b에 대하여 a가 b로 나누어 떨어진다면 두 수의 최대공약수는 b 이다 a가 b로 나누어 떨어지지 않았다면 두수의 최대공약수는 b 와 a%b 의 최대공약수와 같다</summary></entry><entry><title type="html">마크다운 주요 문법 정리</title><link href="http://localhost:4000/frontend/2018/04/markdown-syntax.html" rel="alternate" type="text/html" title="마크다운 주요 문법 정리" /><published>2018-04-23T22:00:00+09:00</published><updated>2018-04-23T22:00:00+09:00</updated><id>http://localhost:4000/frontend/2018/04/markdown-syntax</id><content type="html" xml:base="http://localhost:4000/frontend/2018/04/markdown-syntax.html">&lt;h4 id=&quot;마크다운-이미지-중앙정렬-방법&quot;&gt;마크다운 이미지 중앙정렬 방법&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{: refdef: style=&quot;text-align: center;&quot;}
![자바 vs 자바스크립트](/images/what-nodejs1.png)  
_\&amp;lt;Java 와 Node.js 의 비교\&amp;gt;_
{: refdef}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/what-nodejs1.png&quot; alt=&quot;자바 vs 자바스크립트&quot; /&gt;&lt;br /&gt;
&lt;em&gt;&amp;lt;Java 와 Node.js 의 비교&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;링크-새창으로-열기&quot;&gt;링크 새창으로 열기&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[네이버](http://naver.com){:target=&quot;_blank&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://naver.com&quot; target=&quot;_blank&quot;&gt;네이버&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;참조링크는 본문과 한줄 이상 띄어야 합니다&lt;/li&gt;
  &lt;li&gt;참조링크의 위치는 본문 어느 곳이든 위치할 수 있습니다. 보통은 글 마지막에 둡니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이 글은 [What exactly is Node.js?][1]를 번역한 글입니다.

[1]:https://medium.freecodecamp.org/what-exactly-is-node-js-ae36e97449f5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 글은 &lt;a href=&quot;https://medium.freecodecamp.org/what-exactly-is-node-js-ae36e97449f5&quot;&gt;What exactly is Node.js?&lt;/a&gt;를 번역한 글입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;수평선&quot;&gt;수평선&lt;/h3&gt;
&lt;p&gt;아래 줄은 모두 수평선(&amp;lt;hr/&amp;gt;)을 만든다. 마크다운 문서를 미리보기로 출력할 때 페이지 나누기 용도로 많이 사용한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * *
***
*****
- - -
---------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;테이블&quot;&gt;테이블&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| foo | bar |
| --- | --- |
| baz | bim |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;foo&lt;/th&gt;
      &lt;th&gt;bar&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;baz&lt;/td&gt;
      &lt;td&gt;bim&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hashbox.github.io/마크다운-이미지-중앙정렬&quot; target=&quot;_blank&quot;&gt;https://hashbox.github.io/마크다운-이미지-중앙정렬&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tech.inswave.com/2018/02/13/setup&quot; target=&quot;_blank&quot;&gt;http://tech.inswave.com/2018/02/13/setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">마크다운 이미지 중앙정렬 방법</summary></entry><entry><title type="html">What exactly is Node.js?</title><link href="http://localhost:4000/frontend/2018/04/whatis-nodejs.html" rel="alternate" type="text/html" title="What exactly is Node.js?" /><published>2018-04-23T14:00:00+09:00</published><updated>2018-04-23T14:00:00+09:00</updated><id>http://localhost:4000/frontend/2018/04/whatis-nodejs</id><content type="html" xml:base="http://localhost:4000/frontend/2018/04/whatis-nodejs.html">&lt;p&gt;Node.js는 자바스크립트 실행 환경입니다. 멋진 말입니다. 그런데 그것이 의미하는 바는 무엇이며 어떻게 동작이 된다는 말일까요?&lt;/p&gt;

&lt;p&gt;Node.js는 자바스크립트를 이용해 프로그램을 작성하기 위해 필요한 모든 것을 가지고 있습니다.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/what-nodejs1.png&quot; alt=&quot;자바 vs 자바스크립트&quot; /&gt;&lt;br /&gt;
&lt;em&gt;&amp;lt;Java 와 Node.js 의 비교&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Node.js 는 자바스크립트를 웹브라우져 뿐만 아니라 독립적인 애플리케이션을 만들 때에도 사용하기 위한 목적으로 태어났습니다.
이제 당신은 자바스크립트를 웹사이트의 동적인 사용자 경험을 만드는 것 이상으로 훨씬 더 많은 일들을 할 수 있게 되었습니다.&lt;/p&gt;

&lt;p&gt;자바스크립트는 이제 파이썬 같은 스크립트언어들이 하던 일을 동일하게 처리할 수 있는 능력이 생겼습니다&lt;/p&gt;

&lt;p&gt;웹브라우져에서 동작하는 자바스크립트와 &lt;em&gt;Node.js&lt;/em&gt; 모두 V8엔진 위에서 동작합니다. V8엔진은 자바스크립트 코드를 기계어로 변환해 줍니다. 기계어는 더 이상 번역이 필요없이 컴퓨터가 바로 실행할 수 있는 저수준의 실행 코드입니다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;왜-nodejs-를-사용해야-합니까&quot;&gt;왜 Node.js 를 사용해야 합니까?&lt;/h3&gt;
&lt;p&gt;Node.js 공식사이트에서는 Node.js를 아래와 같이 정의하고 있습니다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Node.js 는 크롬의 V8엔진을 이용한 실행환경이다.&lt;/li&gt;
    &lt;li&gt;Node.js 는 event-driven, non-blocking I/O 를 사용하여 가볍고 효율적이다.&lt;/li&gt;
    &lt;li&gt;Node.js 의 패키지 관리 시스템인 npm은 전세계에서 가장 큰 오픈소스 라이브러리 생태계를 이루고 있다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;우리는 앞서 이미 첫번째 사항에 대하여 살펴 보았습니다.
이제 우리는 Node.js의 나머지 2가지 내용에 대하여 알아볼 것입니다. 이를 통해 우리는 Node.js 가 유명해진 이유를 알게 될 것 입니다.&lt;/p&gt;

&lt;p&gt;I/O는 입력과 출력을 의미합니다. 그것은 네트워크나 파일시스템을 통해 데이터를 읽고 쓰는 행위를 말합니다.&lt;/p&gt;

&lt;p&gt;보통 I/O 처리는 시간을 많이 잡아먹기 때문에 I/O가 처리될 때까지 다른 함수들은 오래도록 실행을 대기해야 합니다&lt;/p&gt;

&lt;p&gt;아래와 같은 상황을 예로 Blocking I/O 와 Non-Blocking I/O를 비교해 봅시다.&lt;br /&gt;
user1과 user2의 상세 정보를 서버에 요청하고 그 결과를 받아서 화면에 출력하고자 합니다. 서버에서 해당 요청에 대한 처리는 시간이 좀 걸립니다 하지만 2가지 요청이 동시에 서버로 날라간다고 가정해 봅시다.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/what-nodejs2.png&quot; alt=&quot;Blocking vs Non-Blocking&quot; /&gt;
&lt;em&gt;&amp;lt;Blocking i/O vs Non-Blocking I/O&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;blocking-io&quot;&gt;Blocking I/O&lt;/h3&gt;
&lt;p&gt;Blocking I/O 의 경우 user1의 요청에 대한 응답이 끝날 때 까지 user2 요청 처리에 대한 어떤 작업도 진행할 수 없습니다.&lt;/p&gt;

&lt;p&gt;그래서 웹서버는 새로운 요청을 처리하기 위해 새로운 thread를 시작할 수 밖에 없습니다. 그러나 자바스크립트는 단일 쓰레드로 동작합니다(정확히 표현하자면 이벤트루프가 단일쓰레드로 동작합니다. 자세한 것은 나중에 다시 다루도록 하겠습니다). 이렇게 멀티쓰레드로 처리 해야하는 상황이라면 자바스크립트는 적절한 선택이 될 수 없습니다.&lt;/p&gt;

&lt;p&gt;이제 Non-Blocking I/O 에 대하여 이야기를 할 때가 된 것 같습니다.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;non-blocking-io&quot;&gt;Non-blocking I/O&lt;/h3&gt;
&lt;p&gt;앞선 경우와 다르게 자바스크립트는 Non-blocking 으로 위 상황을 처리할 수 있습니다. 당신은 user1의 요청에 대한 처리가 끝나기를 기다릴 필요 없이 user2의 요청을 준비하고 실행할 수 있습니다. 당신은 user1, user2의 요청을 동시에 처리할 수 있는 것입니다&lt;/p&gt;

&lt;p&gt;Non-Blocking I/O 가 가능하다면 멀티쓰레드를 사용하지 않고도 서버는 여러개의 요청을 동시에 처리하는 것이 가능합니다&lt;/p&gt;

&lt;h3 id=&quot;the-javascript-event-loop&quot;&gt;The JavaScript event loop&lt;/h3&gt;
&lt;p&gt;당신에게 지금 26분의 여유가 있다면 아래 이벤트루프에 대한 영상을 보기를 권합니다&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/8aGhZQkoFbQ&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
위 영상을 볼 수 없다면 이벤트루프의 단계별 동작에 대해서 간단히 설명을 드리겠습니다.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/what-nodejs3.png&quot; alt=&quot;이벤트루프&quot; /&gt;
&lt;em&gt;&amp;lt;자바스크립트 이벤트루프&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main()&lt;/code&gt; 함수를 &lt;em&gt;Call Stack&lt;/em&gt; 에 추가합니다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console.log()&lt;/code&gt; 를 &lt;em&gt;Call Stack&lt;/em&gt; 에 추가합니다. 이것은 바로 실행되고 &lt;em&gt;Call Stack&lt;/em&gt;  에서 사라집니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(2000)&lt;/code&gt; 을 스택에 추가합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(2000)&lt;/code&gt; 는 Node API이다. 해당 함수를 호출할 때 이벤트 콜백함수를 &lt;em&gt;Callback Queue&lt;/em&gt; 에 등록합니다. 2초 초동안 기다린 후 콜백함수를 호출합니다&lt;/li&gt;
  &lt;li&gt;API목록에 등록이 되면, &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(2000)&lt;/code&gt; 은 &lt;em&gt;Call Stack&lt;/em&gt; 에서 사라집니다&lt;/li&gt;
  &lt;li&gt;이제 같은 방식으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(0)&lt;/code&gt;가 APIs에 등록됩니다. 이제 우리는 실행 대기중인 2개의 Node API를 가지고 있습니다.&lt;/li&gt;
  &lt;li&gt;0초 후에, &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(0)&lt;/code&gt;가 &lt;em&gt;Call Stack&lt;/em&gt; 으로 이동됩니다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(2000)&lt;/code&gt; 도 동일한 방식으로 처리가 됩니다.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Callback Queue&lt;/em&gt; 에서는 &lt;em&gt;Call Stack&lt;/em&gt; 의 함수들이 모두 처리되기를 기다립니다. 단일쓰레드 환경에서는 한번에 하나의 명령만 실행되기 때문에 이 부분을 주의 깊게 보아야 합니다.&lt;/li&gt;
  &lt;li&gt;마지막 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log()&lt;/code&gt; 가 실행되면, &lt;em&gt;Call Stack&lt;/em&gt; 에서 main() 가 꺼내집니다&lt;/li&gt;
  &lt;li&gt;이벤트루프는 &lt;em&gt;Call Stack&lt;/em&gt; 의 empty 여부를 모니터링 하다가 &lt;em&gt;Call Stack&lt;/em&gt; 이 empty 상태가 되면 &lt;em&gt;Callback Queue&lt;/em&gt; 에서 콜백함수를 &lt;em&gt;Call Stack&lt;/em&gt; 으로 이동시킵니다.
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;npm&quot;&gt;npm&lt;/h3&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/what-nodejs4.png&quot; alt=&quot;npm&quot; /&gt;&lt;/p&gt;

&lt;p&gt;npm은 일반적인 문제들을 해결할 수 있는 다양한 라이브러리들을 가지고 있습니다. 당신은 애플리케이션을 보다 빠르고 효율적으로 만들기 위헤 이 npm 패키지들을 이용할 수 있습니다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;require&quot;&gt;Require&lt;/h3&gt;
&lt;p&gt;Require 는 3가지 일을 합니다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Node.js&lt;/em&gt; 패키지 모듈을 로드합니다.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Express&lt;/em&gt; 나 &lt;em&gt;Mongoose&lt;/em&gt; 같은 외부 라이브러리들을 불러오거나 npm을 이용해 설치할 수 있습니다&lt;/li&gt;
  &lt;li&gt;당신이 작성한 모듈을 직접 불러오거나 프로젝트를 모듈화 할 수 있습니다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Require&lt;/em&gt; 는 &lt;em&gt;“path”&lt;/em&gt; 를 인자로 받아서 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt; 를 리턴합니다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;node-modules&quot;&gt;Node Modules&lt;/h3&gt;
&lt;p&gt;Node의 모듈은 다른 코드들에 영향을 미치지 않는 재사용 가능한 코드블록 입니다&lt;/p&gt;

&lt;p&gt;당신은 자신만의 모듈을 작성할 수 있고 다양한 애플리케이션에서 그것을 사용할 수 있습니다. Node.js 는 특별한 설치없이 바로 사용가능한 모듈들을 포함하고 있습니다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;v8-turbo-charges-javascript-by-leveraging-c&quot;&gt;V8 turbo-charges JavaScript by leveraging C++&lt;/h3&gt;
&lt;p&gt;V8은 C++로 씌어진 자바스크립트의 오픈소스 실행환경입니다&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;JavaScript -&amp;gt; V8(C++) -&amp;gt; Machine Code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;V8은 ECMA-262의 명세인 ECMAScript 를 구현하였습니다. ECMAScript는 자바스크립트 표준화 단체인 Ecma International에 의해 탄생하였습니다.&lt;/p&gt;

&lt;p&gt;V8은 단독으로 실행되거나 C++ 애플리케이션에 포함될 수 있습니다. 또한 자바스크립트를 사용할 수 있는 당신만의 C++코드를 작성할 수 있도록 허용합니다.&lt;/p&gt;

&lt;p&gt;이것은 V8을 이용해 당신이 ECMAScript 표준 스펙 이외의 원하는 자바스크립트 기능을 자신만의 C++을 이용해 직접 추가할 수 있음을 의미합니다.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;events&quot;&gt;Events&lt;/h3&gt;
&lt;p&gt;애플리케이션 안에서 발생하는 사건들 중 우리가 직접 핸들링이 가능한 것을 이벤트라고 한다. Node 에는 2가지 종류의 이벤트가 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;System Events: libuv 라고 불리는 C++코어에서 발생하는 이벤트(예를 들면, 파일을 읽기가 끝났을 때).&lt;/li&gt;
  &lt;li&gt;Custom Events: 자바스크립트 코어에서 발생하는 이벤트
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;writing-hello-world-in-nodejs&quot;&gt;Writing Hello World in Node.js&lt;/h3&gt;
&lt;p&gt;Node.js 용 Hello World 를 만들어 보겠습니다.&lt;/p&gt;

&lt;p&gt;app.js 파일을 만들고 아래 코드를 작성합니다&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console.log(&quot;Hello World!&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;터미널에서 app.js 파일이 있는 경로로 이동한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;node app.js&lt;/code&gt; 명령을 실행해 봅니다.&lt;/p&gt;

&lt;p&gt;짠, 이렇게 Hello World 프로그램을 Node.js 로 작성해 보았습니다.&lt;/p&gt;

&lt;p&gt;freeCodeCamp.org를 포함하여 Node.js 에 대하여 배울 수 있는 자료들은 엄청나게 많이 있습니다.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref.&lt;/h3&gt;
&lt;p&gt;이 글은 &lt;a href=&quot;https://medium.freecodecamp.org/what-exactly-is-node-js-ae36e97449f5&quot;&gt;What exactly is Node.js?&lt;/a&gt;를 번역한 글입니다. 글읽기에 어려움이 없도록 충분한 의역을 포함하였습니다.&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">Node.js는 자바스크립트 실행 환경입니다. 멋진 말입니다. 그런데 그것이 의미하는 바는 무엇이며 어떻게 동작이 된다는 말일까요?</summary></entry><entry><title type="html">postman 을 이용한 request 캡쳐</title><link href="http://localhost:4000/python/2018/04/postman.html" rel="alternate" type="text/html" title="postman 을 이용한 request 캡쳐" /><published>2018-04-20T23:00:00+09:00</published><updated>2018-04-20T23:00:00+09:00</updated><id>http://localhost:4000/python/2018/04/postman</id><content type="html" xml:base="http://localhost:4000/python/2018/04/postman.html">&lt;h4 id=&quot;모바일에서-http-request-캡쳐&quot;&gt;모바일에서 HTTP request 캡쳐&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.getpostman.com/docs/v6/postman/sending_api_requests/capturing_http_requests&quot;&gt;https://www.getpostman.com/docs/v6/postman/sending_api_requests/capturing_http_requests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;postman의 proxy 를 사용&lt;/li&gt;
  &lt;li&gt;모바일 장비와 postman이 설치된 PC가 동일한 네트워크 망내 물려 있어야 함
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;크롬에서-http-request-캡쳐&quot;&gt;크롬에서 HTTP request 캡쳐&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.getpostman.com/docs/v6/postman/sending_api_requests/interceptor_extension&quot;&gt;https://www.getpostman.com/docs/v6/postman/sending_api_requests/interceptor_extension&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;postman native app&lt;/em&gt; 으로는 안되고 &lt;em&gt;chrome postman app&lt;/em&gt; 을 이용해야 함&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;interceptor extension&lt;/em&gt; 과 &lt;em&gt;chrome postman app&lt;/em&gt; 양쪽 모두에서 &lt;em&gt;Request Capture&lt;/em&gt; 를 &lt;em&gt;on&lt;/em&gt; 설정&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">모바일에서 HTTP request 캡쳐 https://www.getpostman.com/docs/v6/postman/sending_api_requests/capturing_http_requests postman의 proxy 를 사용 모바일 장비와 postman이 설치된 PC가 동일한 네트워크 망내 물려 있어야 함</summary></entry><entry><title type="html">[python] SimpleHTTPServer</title><link href="http://localhost:4000/python/2018/04/SimpleHTTPServer.html" rel="alternate" type="text/html" title="[python] SimpleHTTPServer" /><published>2018-04-20T13:00:00+09:00</published><updated>2018-04-20T13:00:00+09:00</updated><id>http://localhost:4000/python/2018/04/SimpleHTTPServer</id><content type="html" xml:base="http://localhost:4000/python/2018/04/SimpleHTTPServer.html">&lt;h4 id=&quot;problem&quot;&gt;Problem&lt;/h4&gt;
&lt;p&gt;로컬에 서버가 설치되어 있지 않지만 간단하게(3초 안에) 웹서버를 띄우고 싶다
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;solution&quot;&gt;Solution&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;python 이 설치되어 있다면,  &lt;em&gt;DOCUMENT_ROOT&lt;/em&gt; 경로에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ python -m SimpleHTTPServer&lt;/code&gt; 를 실행한다.&lt;/li&gt;
  &lt;li&gt;브라우져에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:8000&lt;/code&gt; 로 붙어 본다.
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pythonforbeginners.com/modules-in-python/how-to-use-simplehttpserver/&quot; target=&quot;_blank&quot;&gt;http://www.pythonforbeginners.com/modules-in-python/how-to-use-simplehttpserver/&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 로컬에 서버가 설치되어 있지 않지만 간단하게(3초 안에) 웹서버를 띄우고 싶다</summary></entry><entry><title type="html">[js] getter와 setter 를 설정하는 방법</title><link href="http://localhost:4000/frontend/2018/04/getter-setter.html" rel="alternate" type="text/html" title="[js] getter와 setter 를 설정하는 방법" /><published>2018-04-19T10:00:00+09:00</published><updated>2018-04-19T10:00:00+09:00</updated><id>http://localhost:4000/frontend/2018/04/getter-setter</id><content type="html" xml:base="http://localhost:4000/frontend/2018/04/getter-setter.html">&lt;p&gt;getter와 setter 를 이용하면 객체의 속성값을 읽고 쓰는 방법을 새롭게 정의할 수 있다
아래 코드를 먼저 보자&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; 객체는 아래 3가지 속성을 갖는다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;o.a&lt;/code&gt; — 숫자값&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;o.b&lt;/code&gt; — &lt;code class=&quot;highlighter-rouge&quot;&gt;o.a&lt;/code&gt; 에 1을 더한 값을 리턴하는 getter&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;o.c&lt;/code&gt; — &lt;code class=&quot;highlighter-rouge&quot;&gt;o.a&lt;/code&gt; 에 할당된 값의 절반을 세팅하는 setter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;getter와 setter를 정의할 때  &lt;code class=&quot;highlighter-rouge&quot;&gt;[gs]et propertyName(){ ~~ }&lt;/code&gt; 문법을 사용하고 있음을 주목하기 바란다. 이 문법은 사람(사용자)에게는 혼돈스러움을 줄 수 있지만 기계(프로그램)적으로는 다른 문법요소(ex, 함수정의)와 구별하여 정확하게 getter와 setter 설정을 가능하게 한다.&lt;/p&gt;

&lt;p&gt;아래 코드는 이미 생성된 객체에 getter 와 setter 를 설정하는 방법을 보여준다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getFullYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setFullYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행결과는 아래와 같다&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2000&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 987617605170&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Wed Apr 18 11:13:25 GMT-0700 (Pacific Daylight Time) 2001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원칙적으로 getter와 setter를 설정하는 방법은 아래 2가지 방법만 가능하다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;객체리터럴을 이용해 객체를 생성할 때&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.defineProperty&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.defineProperties&lt;/code&gt; 를 이용한 동적 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래 예와 같이 객체생성자를 이용할 때 당신이 해야할 일은 단지 속성명으로된 함수 정의 앞에 get 이나 set을 적어주는 것 뿐이다. 물론 getter 는 패러미터를 가지지 말아야 하며, setter는 정확히 단 한 개의 패러미터만 가질 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Object.defineProperties 를 이용하면 getter와 setter는 객체생성 이후 어느 시점에서든 추가될 수 있다. 첫번째 인자는 getter/setter 를 추가할 객체를, 두번째 인자로는 getter/setter를 추가할 속성명과 getter/setter 함수가 정의된 객체를 전달한다. 앞선 예제와 동일한 기능을 하는 아래 예시를 보자&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Runs the setter, which assigns 10 / 2 (5) to the 'a' property&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Runs the getter, which yields a + 1 or 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;당신은 당신의 코드스타일이나 처리할 문제 유형에 따라 위 둘 중 어느 형태든 선택을 할 수 있다. 객체의 prototype을 직접 정의하는 경우라면 대부분 첫번째 방법을 사용할 것이다. 이 방법은 훨씬 간결하고 자연스럽기 때문이다. 하지만 당신이 직접 객체의 prototype을 정의하는 경우가 아니라면 두번째 방법만이 유일한 선택지가 된다. 두번째 방법은 동적 언어로서의 자바스크립트 특성을 멋지게 잘 보여준다. 하지만 이런 방법은 코드의 가독성을 떨어뜨려 코드를 이해하기 어렵게 하는 요인이 될 수 있다.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ref&quot;&gt;Ref.&lt;/h3&gt;
&lt;p&gt;이 글은 getter와 setter에 관한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;MDN 기술문서의 일부&lt;/a&gt;를 번역한 글이다. 글읽기에 어려움이 없도록 충분한 의역을 포함하였다.&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">getter와 setter 를 이용하면 객체의 속성값을 읽고 쓰는 방법을 새롭게 정의할 수 있다 아래 코드를 먼저 보자 ```js var o = { a: 7, get b() { return this.a + 1; }, set c(x) { this.a = x / 2; } };</summary></entry></feed>