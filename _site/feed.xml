<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2018-06-06T23:15:52+09:00</updated><id>http://0.0.0.0:4000/</id><title type="html">Write code like poem</title><subtitle>SW개발에 대한 이야기</subtitle><author><name>mg.song</name></author><entry><title type="html">[mongodb] aws ec2 에서 mongodb 세팅하기</title><link href="http://0.0.0.0:4000/back-end/2018/06/mongodb-setting.html" rel="alternate" type="text/html" title="[mongodb] aws ec2 에서 mongodb 세팅하기" /><published>2018-06-06T10:00:00+09:00</published><updated>2018-06-06T10:00:00+09:00</updated><id>http://0.0.0.0:4000/back-end/2018/06/mongodb-setting</id><content type="html" xml:base="http://0.0.0.0:4000/back-end/2018/06/mongodb-setting.html">&lt;h4 id=&quot;mongodb-설치&quot;&gt;mongodb 설치&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;root 권한으로 전환
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo su
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/yum.repos.d/mongodb-org-3.4.repo&lt;/code&gt; 입력 후 아래 내용 저장
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mongodb-org-3.4]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.4/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;yum 으로 설치
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install -y mongodb-org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;mongodb-서버시작-및-접속&quot;&gt;mongodb 서버시작 및 접속&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;서비스 시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service mongod start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;서비스 재시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service mongod restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;서버접속
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;mongodb-보안-설정&quot;&gt;mongodb 보안 설정&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;설정을 수정하려면 root 권한이 필요하다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/mongod.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;외부에서 접근을 허용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;net&lt;/code&gt; 항목의 &lt;code class=&quot;highlighter-rouge&quot;&gt;bindIp&lt;/code&gt; 항목을 아래와 같이 주석처리한다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# network interfaces
net:
  port: 27017
#  bindIp: 127.0.0.1  # Listen to local interface only, comment to listen on all interfaces.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;익명 로그인을 제한하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;security&lt;/code&gt; 항목에 &lt;code class=&quot;highlighter-rouge&quot;&gt;authorization: enabled&lt;/code&gt; 를 추가한다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;security:
 authorization: enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://chichi.space/2017/05/12/한번에-끝내는-AWS-EC2에-MongoDB-설치하고-보안설정하기/&quot;&gt;https://chichi.space/2017/05/12/한번에-끝내는-AWS-EC2에-MongoDB-설치하고-보안설정하기/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">mongodb 설치 root 권한으로 전환 $ sudo su vi /etc/yum.repos.d/mongodb-org-3.4.repo 입력 후 아래 내용 저장 [mongodb-org-3.4] name=MongoDB Repository baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.4/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc yum 으로 설치 $ yum install -y mongodb-org</summary></entry><entry><title type="html">[mongodb] 명령어</title><link href="http://0.0.0.0:4000/back-end/2018/06/mongodb-command.html" rel="alternate" type="text/html" title="[mongodb] 명령어" /><published>2018-06-05T10:00:00+09:00</published><updated>2018-06-05T10:00:00+09:00</updated><id>http://0.0.0.0:4000/back-end/2018/06/mongodb-command</id><content type="html" xml:base="http://0.0.0.0:4000/back-end/2018/06/mongodb-command.html">&lt;h4 id=&quot;몽고디비-시작-및-접속windows&quot;&gt;몽고디비 시작 및 접속(Windows)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;서비스 시작
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;몽고디비는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\data\db&lt;/code&gt; 경로를 바라보며 시작한다. 해당 경로가 없을 경우 정상적으로 서비스가 시작되지 않고 오류가 발생하므로 미리 해당 폴더를 만들어 두도록 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;디비서버 접속
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;데이터베이스-관리&quot;&gt;데이터베이스 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;데이터베이스 생성
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; use talkplace
switched to db talkplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 데이터베이스 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db
talkplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show dbs
admin      0.000GB
config     0.000GB
local      0.000GB
talkplace  0.000GB
test       0.000GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; use talkplace
switched to db talkplace
&amp;gt; db.dropDatabase()
{ &quot;dropped&quot; : &quot;talkplace&quot;, &quot;ok&quot; : 1 }
&amp;gt; show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
test    0.000GB
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;콜렉션-관리&quot;&gt;콜렉션 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;콜렉션 생성&lt;br /&gt;
기본 옵션으로 생성
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.createCollection(&quot;posts&quot;)
{ &quot;ok&quot; : 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show collections
book
posts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션에 다큐먼트 추가
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.insert({&quot;key&quot; : &quot;BJwttIGe7&quot;, &quot;title&quot; : &quot;오늘은 왜케 잠잠하지.. 허허&quot;, &quot;writer&quot; : &quot;송혜교&quot;, &quot;conten
t&quot; : &quot;그러니 왠지 더욱 불안..\n&quot;, &quot;date&quot; : 1528093055313 })
WriteResult({ &quot;nInserted&quot; : 1 })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;posts 콜렉션이 이미 생성되지 않은 경우에는 자동으로 생성된 후 다큐먼트가 추가된다. 아래와 같이 배열로 여러 건을 한꺼번에 추가할 수도 있다&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.insert([
... {&quot;key&quot; : &quot;rJf4T8zlm&quot;, &quot;title&quot; : &quot;이제 대략 정리가 된거 같다아&quot;, &quot;writer&quot; : &quot;휴우&quot;, &quot;content&quot; : &quot;정신 하나
도 없었엉~~&quot;, &quot;date&quot; : 1528093993879 },
... {&quot;key&quot; : &quot;SyTvQvflX&quot;, &quot;title&quot; : &quot;이제 나왔다&quot;, &quot;writer&quot; : &quot;카카&quot;, &quot;content&quot; : &quot;서버에서 돈다 이젠&quot;, &quot;date
&quot; : 1528095589017 }
... ])
BulkWriteResult({
      &quot;writeErrors&quot; : [ ],
      &quot;writeConcernErrors&quot; : [ ],
      &quot;nInserted&quot; : 2,
      &quot;nUpserted&quot; : 0,
      &quot;nMatched&quot; : 0,
      &quot;nModified&quot; : 0,
      &quot;nRemoved&quot; : 0,
      &quot;upserted&quot; : [ ]
})
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; show collections
book
posts
&amp;gt; db.book.drop()
true
&amp;gt; show collections
posts
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;콜렉션의 다큐먼트 목록 확인
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; db.posts.find()
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7366&quot;), &quot;key&quot; : &quot;BJwttIGe7&quot;, &quot;title&quot; : &quot;오늘은 왜케 잠잠하지.. 허허&quot;,
 &quot;writer&quot; : &quot;송혜교&quot;, &quot;content&quot; : &quot;그러니 왠지 더욱 불안..\n&quot;, &quot;date&quot; : 1528093055313 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7367&quot;), &quot;key&quot; : &quot;rJf4T8zlm&quot;, &quot;title&quot; : &quot;이제 대략 정리가 된거 같다아&quot;
, &quot;writer&quot; : &quot;휴우&quot;, &quot;content&quot; : &quot;정신 하나도 없었엉~~&quot;, &quot;date&quot; : 1528093993879 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7368&quot;), &quot;key&quot; : &quot;SyTvQvflX&quot;, &quot;title&quot; : &quot;이제 나왔다&quot;, &quot;writer&quot; : &quot;카
카&quot;, &quot;content&quot; : &quot;서버에서 돈다 이젠&quot;, &quot;date&quot; : 1528095589017 }
{ &quot;_id&quot; : ObjectId(&quot;5b15e27b8169daf6fd8c7369&quot;), &quot;key&quot; : &quot;SJblZ_Me7&quot;, &quot;title&quot; : &quot;안녕&quot;, &quot;writer&quot; : &quot;이것도&quot;, &quot;
content&quot; : &quot;입력할때 좀 버벅 거리는 현상이 조금 있는거 같은디&quot;, &quot;date&quot; : 1528099049206 }
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;다큐먼트-관리&quot;&gt;다큐먼트 관리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;다큐먼트 삭제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;db.posts.remove({key : &quot;BJwttIGe7&quot;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;ref&quot;&gt;Ref.&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://velopert.com/594&quot;&gt;https://velopert.com/594&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velopert.com/436&quot;&gt;https://velopert.com/436&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">몽고디비 시작 및 접속(Windows) 서비스 시작 C:\&quot;Program Files&quot;\MongoDB\Server\3.6\bin\mongod 몽고디비는 기본적으로 C:\data\db 경로를 바라보며 시작한다. 해당 경로가 없을 경우 정상적으로 서비스가 시작되지 않고 오류가 발생하므로 미리 해당 폴더를 만들어 두도록 한다.</summary></entry><entry><title type="html">[AWS-EC2] 리눅스에 nodejs 설치</title><link href="http://0.0.0.0:4000/aws/2018/05/ec2-node.html" rel="alternate" type="text/html" title="[AWS-EC2] 리눅스에 nodejs 설치" /><published>2018-05-31T10:00:00+09:00</published><updated>2018-05-31T10:00:00+09:00</updated><id>http://0.0.0.0:4000/aws/2018/05/ec2-node</id><content type="html" xml:base="http://0.0.0.0:4000/aws/2018/05/ec2-node.html">&lt;ol&gt;
  &lt;li&gt;EC2 업데이트&lt;br /&gt;
프롬프트가 뜨면 ‘y’를 입력
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;설치에 필요한 패키지들 먼저 설치
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install gcc-c++ make
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install openssl-devel
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Github 저장소에서 Node를 내려받고 어떤 버전의 노드를 설치할 것인지 선택한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -l&lt;/code&gt; 명령을 사용하면 전체 노드 버전을 확인할 수 있다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/joyent/node.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout v0.12.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;근데 위 git저장소에는 너무 오래된 버젼만 들어있음. 위 제시된 0.12.7 버젼에서는 es6 사용불가.
&lt;em&gt;&lt;a href=&quot;https://nodejs.org/dist/&quot;&gt;https://nodejs.org/dist/&lt;/a&gt;&lt;/em&gt; 에서 시스템환경에 맞는 최신 nodejs 버젼을 가져올 수도 있음&lt;/p&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://nodejs.org/download/release/v9.2.1/node-v9.2.1.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; node-v9.2.1.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node-v9.2.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;make 명령으로 컴파일하고 설치한다(make 명령은 30분정도 시간이 소요될 수 있다)
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Ref) &lt;a href=&quot;http://behonestar.tistory.com/39&quot;&gt;http://behonestar.tistory.com/39&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">EC2 업데이트 프롬프트가 뜨면 ‘y’를 입력 $ sudo yum update</summary></entry><entry><title type="html">[vscode] java 사용시 세팅 관련</title><link href="http://0.0.0.0:4000/tool/2018/05/vscode-setting.html" rel="alternate" type="text/html" title="[vscode] java 사용시 세팅 관련" /><published>2018-05-30T10:00:00+09:00</published><updated>2018-05-30T10:00:00+09:00</updated><id>http://0.0.0.0:4000/tool/2018/05/vscode-setting</id><content type="html" xml:base="http://0.0.0.0:4000/tool/2018/05/vscode-setting.html">&lt;ol&gt;
  &lt;li&gt;특정 jar를 인식하지 못할 때,&lt;br /&gt;
작업폴더의 루트 경로의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.classpath&lt;/code&gt; 파일에서 아래처럼 필요한 jar 파일들을 명시해 준다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/*.jar&lt;/code&gt; 나 &lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/*&lt;/code&gt; 과 같이 설정은 안되더라&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpath&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;attributes&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;nt&quot;&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;owner.project.facets&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;/attributes&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpathentry&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jst.j2ee.internal.web.container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;con&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.jst.j2ee.internal.module.container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/Applications/apache-tomcat-7.0.29/lib/servlet-api.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/lib/InswaveFramework.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/lib/json_simple-1.1.jar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lib&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WebContent/WEB-INF/classes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathentry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;kind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;output&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;build/classes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpath&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;확장자별 인코딩을 변경하려면,&lt;br /&gt;
_작영 영역 설정_에서 아래와 같이 세팅한다. _gw 폴더 설정_에서 하면 안 먹힘
&lt;img src=&quot;/images/vscode-encoding.png&quot; alt=&quot;img2&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>mg.song</name></author><summary type="html">특정 jar를 인식하지 못할 때, 작업폴더의 루트 경로의 .classpath 파일에서 아래처럼 필요한 jar 파일들을 명시해 준다. /lib/*.jar 나 /lib/* 과 같이 설정은 안되더라</summary></entry><entry><title type="html">[mac] 열린 포트 확인</title><link href="http://0.0.0.0:4000/network/2018/05/mac-lsof.html" rel="alternate" type="text/html" title="[mac] 열린 포트 확인" /><published>2018-05-17T10:00:00+09:00</published><updated>2018-05-17T10:00:00+09:00</updated><id>http://0.0.0.0:4000/network/2018/05/mac-lsof</id><content type="html" xml:base="http://0.0.0.0:4000/network/2018/05/mac-lsof.html">&lt;p&gt;아래와 같이 lsof 명령으로 확인&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lsof &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; :7005
&lt;span class=&quot;go&quot;&gt;COMMAND   PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
java    72631 songmingu   57u  IPv6 0x5973dd9e9c2d668d      0t0  TCP localhost:afs3-volser (LISTEN)
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt; 72631
&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lsof &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; :7005
&lt;span class=&quot;gp&quot;&gt;MacBook9:~ songmingu$&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://new93helloworld.tistory.com/138&quot;&gt;http://new93helloworld.tistory.com/138&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">아래와 같이 lsof 명령으로 확인</summary></entry><entry><title type="html">OpenSSL Essentials: Working with SSL Certificates, Private Keys and CSRs</title><link href="http://0.0.0.0:4000/network/2018/05/openssl-essentials.html" rel="alternate" type="text/html" title="OpenSSL Essentials: Working with SSL Certificates, Private Keys and CSRs" /><published>2018-05-15T13:00:00+09:00</published><updated>2018-05-15T13:00:00+09:00</updated><id>http://0.0.0.0:4000/network/2018/05/openssl-essentials</id><content type="html" xml:base="http://0.0.0.0:4000/network/2018/05/openssl-essentials.html">&lt;h2 id=&quot;csr이-무엇입니까&quot;&gt;CSR이 무엇입니까&lt;/h2&gt;
&lt;p&gt;CA로부터 SSL인증서를 발급 받으려면 먼저 CSR(Certificate Signing Requests) 이 필요합니다. CSR은 공개키와 몇가지 추가 정보로 구성되어있습니다. 그리고 그 정보들이 인증서 발급시 필요합니다.&lt;/p&gt;

&lt;p&gt;CSR생성시 필요한 정보들은 아래와 같습니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Country Name (2 letter code) [AU]:US
State or Province Name (full name) [Some-State]:New York
Locality Name (eg, city) []:Brooklyn
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Example Brooklyn Company
Organizational Unit Name (eg, section) []:Technology Division
Common Name (e.g. server FQDN or YOUR name) []:examplebrooklyn.com
Email Address []:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;csr-만들기&quot;&gt;CSR 만들기&lt;/h2&gt;
&lt;p&gt;아래 명령은 2048비트 개인키(&lt;code class=&quot;highlighter-rouge&quot;&gt;domain.key&lt;/code&gt;)를 만들고 CSR(&lt;code class=&quot;highlighter-rouge&quot;&gt;domain.csr&lt;/code&gt;)을 생성합니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req \
       -newkey rsa:2048 -nodes -keyout domain.key \
       -out domain.csr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 명령을 실핼하면 CSR생성에 필요한 추가 정보들을 차례대로 입력해야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-newkey rsa:2048&lt;/code&gt; 옵션 : 2048비트 RSA키를 생성합니다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-nodes&lt;/code&gt; 옵션 : 개인키를 암호화하지 않습니다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-new&lt;/code&gt; 옵션 : 명시하지는 않았지만 암묵적으로 적용되며 CSR이 새로 생성될 것임을 의미합니다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSR생성에 필요한 정보들을 아래와 같이 명령어의 옵션으로 주는 것도 가능합니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req \
       -newkey rsa:2048 -nodes -keyout domain.key \
       -subj &quot;/C=US/ST=New York/L=Brooklyn/O=Example Brooklyn Company/CN=examplebrooklyn.com&quot; \
       -out domain.csr \
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이미 생성된 개인키를 가지고 CSR을 생성하는 것도 가능합니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req \
       -key domain.key \
       -new -out domain.csr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;self-signed-인증서&quot;&gt;self-signed 인증서&lt;/h2&gt;
&lt;p&gt;CA로부터 인증된 인증서가 아니더라도 당신은 셀프 서명된 인증서를 이용하여 HTTPS서버를 구성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;아래 명령은 2048비트 RSA키를 만들어 self-signed 인증서를 생성합니다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req \
       -newkey rsa:2048 -nodes -keyout domain.key \
       -x509 -days 365 -out domain.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이후, CSR 정보들을 추가로 입력해 주어야 합니다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-x509 옵션: 인증서에 셀프서명할 것을 의미합니다&lt;/li&gt;
  &lt;li&gt;-days 365: 365일 동안만 유효함&lt;/li&gt;
  &lt;li&gt;인증서 생성을 위해 내부적으로 임시 CSR을 생성합니다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래와 같이 이미 생성된 키를 이용하여 self-signed 인증서를 생성할 수도 있습니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req \
       -key domain.key \
       -new \
       -x509 -days 365 -out domain.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;물론 이미 생성된 CSR과 개인키를 가지고 self-signed 인증서를 바로 만들 수도 있습니다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl x509 \
       -signkey domain.key \
       -in domain.csr \
       -req -days 365 -out domain.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;인증서-검증&quot;&gt;인증서 검증&lt;/h2&gt;
&lt;p&gt;인증서와 CSR파일은 PEM포맷으로 인코딩 되어 있기 때문에 사람이 읽을 수가 없습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;아래 명령은 CSR파일의 내용을 확인합니다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl req -text -noout -verify -in domain.csr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;다음은 인증서(.crt)파일의 내용을 확인합니다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl x509 -text -noout -in domain.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;CA로부터 인증된 인증서는 아래와 같이 내용 확인을 합니다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl verify -verbose -CAFile ca.crt domain.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;개인키-검증&quot;&gt;개인키 검증&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아래는 개인키의 유효성 여부를 검증합니다
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl rsa -check -in domain.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;개인키를 암호화할 수 있습니다.(명령 실행 후 암호화를 위한 비밀번호 입력이 필요합니다)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl rsa -des3 \
     -in unencrypted.key \
     -out encrypted.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;암호화된 개인키를 복호화할 수 있습니다(복호화를 위한 비밀번호 입력이 필요합니다)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl rsa \
     -in encrypted.key \
     -out decrypted.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;더 구체적인 내용은 아래 링크를 참고하세요&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs#about-certificate-signing-requests-(csrs)&quot;&gt;https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs#about-certificate-signing-requests-(csrs)&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">CSR이 무엇입니까 CA로부터 SSL인증서를 발급 받으려면 먼저 CSR(Certificate Signing Requests) 이 필요합니다. CSR은 공개키와 몇가지 추가 정보로 구성되어있습니다. 그리고 그 정보들이 인증서 발급시 필요합니다.</summary></entry><entry><title type="html">[알고리즘] 야근지수</title><link href="http://0.0.0.0:4000/algorithm/2018/05/no-overtime.html" rel="alternate" type="text/html" title="[알고리즘] 야근지수" /><published>2018-05-09T00:00:00+09:00</published><updated>2018-05-09T00:00:00+09:00</updated><id>http://0.0.0.0:4000/algorithm/2018/05/no-overtime</id><content type="html" xml:base="http://0.0.0.0:4000/algorithm/2018/05/no-overtime.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;회사원인 수민이는 많은 일이 쌓여 있습니다. 수민이는 야근을 최소화하기 위해 남은 일의 작업량을 숫자로 메기고, 일에 대한 야근 지수를 줄이기로 결정했습니다. 야근 지수는 남은 일의 작업량을 제곱하여 더한 값을 의미합니다. 수민이는 1시간 동안 남은 일 중 하나를 골라 작업량 1만큼 처리할 수 있습니다. 수민이의 퇴근까지 남은 N 시간과 각 일에 대한 작업량이 있을 때, noOvertime 함수를 제작하여 수민이의 야근 지수를 최소화 한 결과를 출력해 주세요. 예를 들어, N=4 일 때, 남은 일의 작업량이 [4, 3, 3] 이라면 야근 지수를 최소화하기 위해 일을 한 결과는 [2, 2, 2]가 되고 야근 지수는 22 + 22 + 22 = 12가 되어 12를 반환해 줍니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;문제출처: &lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/27&quot;&gt;https://programmers.co.kr/learn/challenge_codes/27&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/dfb6eb7faa0d2c81914e7f7af1e6ed0b.js&quot;&gt;&lt;/script&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 회사원인 수민이는 많은 일이 쌓여 있습니다. 수민이는 야근을 최소화하기 위해 남은 일의 작업량을 숫자로 메기고, 일에 대한 야근 지수를 줄이기로 결정했습니다. 야근 지수는 남은 일의 작업량을 제곱하여 더한 값을 의미합니다. 수민이는 1시간 동안 남은 일 중 하나를 골라 작업량 1만큼 처리할 수 있습니다. 수민이의 퇴근까지 남은 N 시간과 각 일에 대한 작업량이 있을 때, noOvertime 함수를 제작하여 수민이의 야근 지수를 최소화 한 결과를 출력해 주세요. 예를 들어, N=4 일 때, 남은 일의 작업량이 [4, 3, 3] 이라면 야근 지수를 최소화하기 위해 일을 한 결과는 [2, 2, 2]가 되고 야근 지수는 22 + 22 + 22 = 12가 되어 12를 반환해 줍니다. 문제출처: https://programmers.co.kr/learn/challenge_codes/27</summary></entry><entry><title type="html">[알고리즘] 특정날짜 요일 구하기</title><link href="http://0.0.0.0:4000/algorithm/2018/05/js-getday.html" rel="alternate" type="text/html" title="[알고리즘] 특정날짜 요일 구하기" /><published>2018-05-08T23:00:00+09:00</published><updated>2018-05-08T23:00:00+09:00</updated><id>http://0.0.0.0:4000/algorithm/2018/05/js-getday</id><content type="html" xml:base="http://0.0.0.0:4000/algorithm/2018/05/js-getday.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;2016년 1월 1일은 금요일입니다. 2016년 A월 B일은 무슨 요일일까요? 두 수 A,B를 입력받아 A월 B일이 무슨 요일인지 출력하는 getDayName 함수를 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SUN,MON,TUE,WED,THU,FRI,SAT&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;를 출력해주면 됩니다. 예를 들어 A=5, B=24가 입력된다면 5월 24일은 화요일이므로 TUE를 반환하면 됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;문제출처: &lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/178&quot;&gt;https://programmers.co.kr/learn/challenge_codes/178&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;case1-gettime-이용&quot;&gt;Case1) getTime 이용&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/657b6f861c404d44222f7857c9175bde.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;주의) 문자열로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Date&lt;/code&gt; 초기화시 &lt;code class=&quot;highlighter-rouge&quot;&gt;new Date(&quot;2016-01-01&quot;)&lt;/code&gt; 과 &lt;code class=&quot;highlighter-rouge&quot;&gt;new Date(&quot;2016-1-1&quot;)&lt;/code&gt; 의 결과는 아래와 같이 서로 다릅니다
&lt;script src=&quot;https://gist.github.com/min9nim/d17465eefae0a066f5f2d2ce241b0204.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;case2-getday-이용&quot;&gt;Case2) getDay 이용&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/534b95f1ddc405fb6cbbaaada5496f2e.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;case3-tostring-이용&quot;&gt;Case3) toString 이용&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/5e90cfe4f78c040d719b346dcf52b31d.js&quot;&gt;&lt;/script&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 2016년 1월 1일은 금요일입니다. 2016년 A월 B일은 무슨 요일일까요? 두 수 A,B를 입력받아 A월 B일이 무슨 요일인지 출력하는 getDayName 함수를 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각</summary></entry><entry><title type="html">[알고리즘] 피보나치 수</title><link href="http://0.0.0.0:4000/algorithm/2018/05/fibonacci-num.html" rel="alternate" type="text/html" title="[알고리즘] 피보나치 수" /><published>2018-05-04T13:00:00+09:00</published><updated>2018-05-04T13:00:00+09:00</updated><id>http://0.0.0.0:4000/algorithm/2018/05/fibonacci-num</id><content type="html" xml:base="http://0.0.0.0:4000/algorithm/2018/05/fibonacci-num.html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 출력하는 jumpCase 함수를 완성하세요. 예를 들어 4가 입력된다면, 5를 반환해 주면 됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;문제출처: &lt;a href=&quot;https://programmers.co.kr/learn/challenge_codes/33&quot;&gt;https://programmers.co.kr/learn/challenge_codes/33&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;칸의 수가 n 개 주어졌을 때 총 멀리뛰기 방법의 수를 j(n)이라 하자. n칸을 멀리뛰기 하는 전체 방법의 수는 최초 1칸을 뛰었을 경우와 최초 2칸을 뛰었을 경우 2가지로 나누어 볼 수 있다.
첫번째 경우의 방법의 수는 남아있는 칸의 수가 n-1 개 이므로 j(n-1)이 되고 두번째 경우의 방법의 수는 남아있는 칸의 수가 n-2개 이므로 j(n-2)가 된다.
그러므로 j(n) = j(n-1) + j(n-2) 와 같이 표현될 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;js-code&quot;&gt;JS Code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/min9nim/efde65bfb9e1fbff36d427c5da551b0c.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/blog/view/28&quot;&gt;https://www.acmicpc.net/blog/view/28&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>mg.song</name></author><summary type="html">Problem 효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는 (1칸, 1칸, 1칸, 1칸) (1칸, 2칸, 1칸) (1칸, 1칸, 2칸) (2칸, 1칸, 1칸) (2칸, 2칸) 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 출력하는 jumpCase 함수를 완성하세요. 예를 들어 4가 입력된다면, 5를 반환해 주면 됩니다. 문제출처: https://programmers.co.kr/learn/challenge_codes/33</summary></entry><entry><title type="html">[js] 객체와 prototype 의 이해</title><link href="http://0.0.0.0:4000/frontend/2018/05/js-prototype.html" rel="alternate" type="text/html" title="[js] 객체와 prototype 의 이해" /><published>2018-05-04T13:00:00+09:00</published><updated>2018-05-04T13:00:00+09:00</updated><id>http://0.0.0.0:4000/frontend/2018/05/js-prototype</id><content type="html" xml:base="http://0.0.0.0:4000/frontend/2018/05/js-prototype.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자바스크립트는 prototype 을 이용해 완전하지는 않지만 그럴듯하게 객체지향프로그래밍을 흉내낼 수 있다. 기존 자바의 클래스 기반 객체생성 및 상속에 익숙해져 있는 사람이라면 자바스크립트의 객체 생성 및 상속의 개념이 상당히 이질적으로 느껴질 수 있다. 자바스크립트로 객체지향프로그래밍을 하고자 한다면 prototype 에 대한 정확한 이해는 무엇보다 중요하다.&lt;/li&gt;
  &lt;li&gt;이 글은 자바스크립트를 처음 접하는 사람들에게 친절하지 않다. 반면 prototype의 동작방식을 대충은 알지만 정확하게 알지 못한 채 자바스크립트를 습관적으로 사용하던 개발자에게 prototype 의 정확한 이해를 돕는데 집중한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바스크립트의-객체&quot;&gt;자바스크립트의 객체&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자바스크립트의 primitive 데이터타입 5가지
    &lt;ul&gt;
      &lt;li&gt;숫자, 문자열, 불리언(true/false), null, undefined&lt;/li&gt;
      &lt;li&gt;숫자/문자열/불리언은 메소드를 가지고 있기 때문에 객체처럼 보일 수 있지만 일반적인 객체와 달리 이 값들은 한번 정해지면 변경이 불가합니다(immutable)&lt;/li&gt;
      &lt;li&gt;primitive 타입을 제외한 모든 값은 객체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자바스크립트에서 객체란 변경 가능한 속성들의 집합
    &lt;ul&gt;
      &lt;li&gt;ex) 배열, 함수, 정규표현식&lt;/li&gt;
      &lt;li&gt;속성의 이름은 문자열이면 모두 가능, 빈문자열도 허용&lt;/li&gt;
      &lt;li&gt;속성의 값으로는 자바스크립트의 모든 값이 가능
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://7chan.org/pr/src/OReilly_JavaScript_The_Good_Parts_May_2008.pdf&quot;&gt;The Good Parts
by Douglas Crockford&lt;/a&gt; 에서는 undefined 는 속성의 값으로 사용할 수 없다고 되어있는데 책집필 당시에서 그랬었는지 모르겠지만 최근에는 undefined 도 속성의 값으로 들어가는 것으로 확인됩니다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;자바스크립트의 객체는 클래스가 불필요&lt;/li&gt;
      &lt;li&gt;자바스크립트는 특정 객체에 있는 속성들을 다른 객체에 그대로 상속하게 해주는 간단한 방법을 제공하는데 그것이 바로 prototype 연결&lt;/li&gt;
      &lt;li&gt;객체는 참조방식으로 전달, 결코 복사되지 않음&lt;/li&gt;
      &lt;li&gt;객체리터럴로 생성되는 모든 객체는 Object.prototype 객체에 연결됨&lt;/li&gt;
      &lt;li&gt;객체를 생성할 때는 해당 객체의 프로토타입이 될 객체를 선택할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;객체-생성-방법&quot;&gt;객체 생성 방법&lt;/h2&gt;
&lt;p&gt;prototype 을 선택하여 객체를 생성하는 방법은 2가지가 있다&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;new 연산자를 이용하는 방법
    &lt;ul&gt;
      &lt;li&gt;생성자 함수를 정의하고 new 연산자와 함께 생성자 함수를 호출하면 생성자함수의 prototype에 연결을 갖는(생성자함수의 prototype 을 원형으로 하는) 새로운 객체가 생성되고 생성자 함수에 의해 새로운 객체의 속성이 초기화 된다
  &lt;script src=&quot;https://gist.github.com/min9nim/7a384c89b085ac41ab72f53e0b5c19fb.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;이 방법은 자바의 클래스 기반 객체생성 표현법을 닮았다. (아마 당시 자바의 인기에 편승하여 흉내를 낸 것이 아닌가 싶다). 이 방법이 자바스크립트가 인기를 끄는데는 조금이나마 기여했을 지도 모르겠지만 프로토타입을 기반으로 객체 상속을 지원하는 자바스크립트의 내부 동작을 숨겼기 때문에 자바스크립트를 배우는 사람들에게 여러가지 혼란을 가져오고 오해를 불러 일으키게 되었다.&lt;/li&gt;
      &lt;li&gt;new 연산자의 동작을 Function의 메소드로 정의 한다면 아래와 같을 것이다
  &lt;script src=&quot;https://gist.github.com/min9nim/72fd726a2ff9f6b8d61ad8c534a4a756.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;자바스크립트에서 객체를 생성하는 원리에 부합하는 조금 더 직관적인 객체 생성 방법은 Object.create 를 이용하는 것이다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Object.create 를 이용하는 방법
    &lt;ul&gt;
      &lt;li&gt;prototype 으로 사용할 객체를 인자로 전달하면 인자로 전달 된 객체를 원형으로 하는 새로운 객체(o)가 생성된다. &lt;code class=&quot;highlighter-rouge&quot;&gt;o.__proto__ === a&lt;/code&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;
  &lt;script src=&quot;https://gist.github.com/min9nim/5cf5cd11463c79bc3de2f9039c8b2e76.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;Object.create 가 지원되지 않는다면(ie8이하) 아래와 같이 간단하게 polyfill 을 구현할 수 있다.
  &lt;script src=&quot;https://gist.github.com/min9nim/02f40a241014c6f13e0337cac84cb9f0.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;참고로 위 구현은 두번째 인자를 사용할 수 없고, 첫번째 인자로 null을 이용한 순수객체를 만들 수 없다는 점에서 네이티브 Object.create와 다르다. 해당 예외처리를 포함한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill&quot;&gt;Polyfill 참고&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;위 두가지 방식의 사소한 차이점은 1번방식으로 생성된 객체는 해당 속성들이 열거 가능하지만, 2번방법으로 생성된 속성들은 열거 가능하지 않다는 점이다
    &lt;ul&gt;
      &lt;li&gt;1번 방법으로 생성된 객체
  &lt;script src=&quot;https://gist.github.com/min9nim/a6ab5bd9563bca5dd35671f64b67a258.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
      &lt;li&gt;2번 방법으로 생성된 객체
  &lt;script src=&quot;https://gist.github.com/min9nim/6eb131fd72ec002edfa075e7e2154aea.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref.&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://7chan.org/pr/src/OReilly_JavaScript_The_Good_Parts_May_2008.pdf&quot;&gt;https://7chan.org/pr/src/OReilly_JavaScript_The_Good_Parts_May_2008.pdf&lt;/a&gt;
&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object/create&lt;/a&gt;&lt;/p&gt;</content><author><name>mg.song</name></author><summary type="html">Intro 자바스크립트는 prototype 을 이용해 완전하지는 않지만 그럴듯하게 객체지향프로그래밍을 흉내낼 수 있다. 기존 자바의 클래스 기반 객체생성 및 상속에 익숙해져 있는 사람이라면 자바스크립트의 객체 생성 및 상속의 개념이 상당히 이질적으로 느껴질 수 있다. 자바스크립트로 객체지향프로그래밍을 하고자 한다면 prototype 에 대한 정확한 이해는 무엇보다 중요하다. 이 글은 자바스크립트를 처음 접하는 사람들에게 친절하지 않다. 반면 prototype의 동작방식을 대충은 알지만 정확하게 알지 못한 채 자바스크립트를 습관적으로 사용하던 개발자에게 prototype 의 정확한 이해를 돕는데 집중한다.</summary></entry></feed>